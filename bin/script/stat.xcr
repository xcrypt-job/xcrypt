use base qw(core);
use Getopt::Long;
use jobsched;

our %options = ();

my %keys = ('help' => '    show all the options',
	    'job=s' => '   show indicated jobs only',
	    'status=s' => 'show jobs of the state only',
	    'output' => "  show jobs' standard output",
	    'error' => "   show jobs' standard error",
    );
GetOptions(\%options, keys(%keys));

if (defined $options{'help'}) {
    foreach my $key (keys(%keys)) {
	print $key . '  ' . $keys{$key}, "\n";
    }
} else {
    foreach my $id (keys %jobsched::Last_State) {
	if (defined $options{'job'}) {
	    if ($id =~ /$options{job}/) {
		&print_stat($id);
	    }
	} elsif (defined $options{'status'}) {
	    if ($jobsched::Last_State{$id} =~ /$options{status}/) {
		&print_stat($id);
	    }
	} else {
	    &print_stat($id);
	}
    }
}

sub print_stat {
    my $id = shift;
    print "$id = $jobsched::Last_State{$id}";
    if ( $jobsched::Last_Request_ID{$id} ) {
	print " (request_ID=$jobsched::Last_Request_ID{$id})";
    }
    print "\n";
    if (defined $options{'output'}) {
	print '=' . $id . "'s stdout=\n";
	open(my $out, File::Spec->catfile($jobsched::Last_Workdir{$id}, $jobsched::Last_Stdout{$id})) or die $!;
	foreach (<$out>) { print "$_"; }
	close($out);
    }
    if (defined $options{'error'}) {
	print '=' . $id . "'s stderr=\n";
	open(my $out, File::Spec->catfile($jobsched::Last_Workdir{$id}, $jobsched::Last_Stderr{$id})) or die $!;
	foreach (<$out>) { print "$_"; }
	close($out);
    }
}
