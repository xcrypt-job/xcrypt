use base qw(sandbox limit core);
use data_generator;
use data_extractor;
&limit::initialize(4);

%template = (
    'id@' => sub{ "hpljob_" . $VALUE[0] . '_' . $VALUE[1]; },
    'exe0' => 'mpirun -group $PBS_NODEFILE -JOBID=$PBS_JOBID ./xhpl',
    'copiedfile0' => 'xhpl',
    'JS_queue' => 'batch',
    'JS_node' => 1,
    'JS_cpu' => 4,					# P x Q <= # of proc.
# Indicate sweep ranges
    'RANGE0'   => [0, 1],				# PMAP process mapping
    'RANGE1'   => [1, 2],				# P
    'before' => sub{
	my $self = shift;
        # Generate input file
        my $hpldat = data_generator -> new("HPL.dat",
                                           $self->{workdir} . "/HPL.dat");
	$hpldat -> replace_line_column ( 9, 1, $VALUE[0]); # take one of RANGE1
	$hpldat -> replace_line_column (11, 1, $VALUE[1]); # take one of RANGE2
	$hpldat -> replace_line_column (12, 1, $self->{'JS_cpu'}/$VALUE[1]);
        $hpldat -> execute();
    },
    'after' => sub{
        # Wait for stdout to be outputed
        sleep(1);
	my $self = shift;
        # Extract performance value
	my $stdout_file = $self->{workdir} . "/$self->{id}_stdout";
        my $stdout = data_extractor -> new ($stdout_file);
        $stdout -> extract_line_rn (['PASSED',-2]);
        $stdout -> extract_line_nn (1);
        $stdout -> extract_column_nn (7);
        @result = $stdout -> execute();
        print $result[0], "\n";
        # Examine the best performance
        if ( $result[0] > $max_performance ) {
            $max_performance = $result[0];
            $max_performance_dir = $self->{workdir};
            my $stdout = data_extractor -> new ($stdout_file);
            $stdout -> extract_line_rn (['following parameter',18]);
            $stdout -> extract_line_nn ([3,18]);
            @parameters = $stdout -> execute();
        }
    },
);

&prepare_submit_sync(%template);

# Output of final result
print "\n", "-------- RESULT -------- \n\n";
print "Maximum performance is\n\n" . $max_performance . " Gflops,\n\n";
print "when the following parameter values are used:\n";
print "(corresponding working directory is " . $max_performance_dir . " )\n\n";
foreach $parameter ( @parameters ) {
    print $parameter, "\n";
}
print "\n";
