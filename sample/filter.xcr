use base qw(sandbox core);
use data_extractor;

%template1 = (
    'id@' => sub { 'job6_'.$VALUE[0].'_'.$VALUE[2] },
    'exe0@' => sub { 'bin/fib '.($VALUE[0] + $VALUE[2])." > "; },
    'arg0_0@' => sub { $_[0]->{JS_queue}.'_'.$VALUE[0].'_'. $VALUE[2]; },
    'RANGE0' => [20..22],
    'RANGE2' => [0,3],
#    'RANGES' => [[20..22],[0],[0,3]],
    'JS_queue' => 'gh10034',
    'JS_group' => 'gh10034',
    'copiedfile0' => 'bin',
    'after'  => sub { my $self = shift;
		      my $stdout = data_extractor->new( 'file:' . "$ENV{'PWD'}/$self->{workdir}/" . $self->{arg0_0});
		      $stdout->extract_line_nn( '1' );
		      $stdout->extract_column_nn( '3' );
		      my @result = $stdout->execute();
		      $self->{foo} = $result[0];
    }
);

my @jobs = &prepare(%template1);
&submit(@jobs);
my @in = &sync(@jobs);
my @out1 = &filter( sub { $_[0]->{foo} > 100000; }, @in );
foreach (@out1) {
    print "$_->{id}: $_->{foo} @{$_->{VALUE}}\n";
}

